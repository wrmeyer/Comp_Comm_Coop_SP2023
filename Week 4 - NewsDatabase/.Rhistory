"Arts", "Restaurant", "NGO",
"Maintenance", "Cleaning", "Government",
"Student", "Retired", "Unemployed", "Other"))
df[conti_vars] <- lapply(df[conti_vars], as.numeric)
df[categ_vars] <- lapply(df[categ_vars], as.factor)
df <- df %>% drop_na(any_of(clust_vars))
gower.dist <- daisy(df[clust_vars], metric = c("gower"))
df[pam_clust$medoids, clust_vars]
pam_clust = pam(gower.dist, diss = TRUE, k = 4)
df[pam_clust$medoids, clust_vars]
silhouette <- c()
silhouette = c(silhouette, NA)
for(i in 2:10){
pam_clusters = pam(as.matrix(gower.dist),
diss = TRUE,
k = i)
silhouette = c(silhouette ,pam_clusters$silinfo$avg.width)
}
pam_clust = pam(gower.dist, diss = TRUE, k = 9)
df[pam_clust$medoids, clust_vars]
pam_clust = pam(gower.dist, diss = TRUE, k = 11)
df[pam_clust$medoids, clust_vars]
df <- df %>% mutate(cluster = pam_clust$clustering)
tsne_object <- Rtsne(gower.dist, is_distance = TRUE)
tsne_df <- tsne_object$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_clust$clustering))
ggplot(aes(x = X, y = Y), data = tsne_df) +
geom_point(aes(color = cluster))
clusters <- df %>% group_by(cluster)
hist(df$Age)
hist(df$Educ)
hist(df$living)
hist(df$income)
hist(df$Income)
df$living <- 6-df$living
packages <- c("cluster", # For gower distance
"ggplot2", # For visualization
"fastDummies", # For creating dummy variables
"dplyr",
"Rtsne",
"tidyverse")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], repos = 'http://cran.us.r-project.org')
}
invisible(lapply(packages, library, character.only = TRUE))
setwd("/Users/abby/Research/Ongoing/SES")
df <- read.csv("national_ed.csv")
colnames(df)[which(names(df) == "S14_1")] <- "Schooling"
colnames(df)[which(names(df) == "OC1")] <- "Occupation"
clust_vars <- c("Age", "Educ", "living", "Income", "Gender", "rural_urban", "race", "Schooling", "Occupation")
conti_vars <- c("Age", "Educ", "living", "Income")
categ_vars <- c("Gender", "rural_urban", "race", "Schooling", "Occupation")
df$Gender <- factor(df$Gender,
levels = c(1,2,3),
labels = c("Male", "Female", "Non-binary"))
df$rural_urban <- factor(df$rural_urban,
levels = c(1,2,3),
labels = c("Urban", "Suburban", "Rural"))
df$race <- factor(df$race,
levels = c(1,2,3,4,5),
labels = c("Black", "Hispanic", "White", "Asian", "Indigenous"))
df$Schooling <- factor(df$Schooling,
levels = c(1,2,3,4,5,6),
labels = c("Public", "Private", "Home", "College", "Out of School", "No Children"))
df$Occupation <- factor(df$Occupation,
levels = c(0:26, 97),
labels = c("Do not work", "Agriculture", "Mining",
"Construction", "Manufacturing", "Wholesale",
"Sales", "Transportation", "Media",
"Finance", "Insurance", "Real Estate",
"Personal care", "Research", "Engineering",
"Law", "Education", "Health care",
"Arts", "Restaurant", "NGO",
"Maintenance", "Cleaning", "Government",
"Student", "Retired", "Unemployed", "Other"))
df$living <- 4-df$living
df[conti_vars] <- lapply(df[conti_vars], as.numeric)
df[categ_vars] <- lapply(df[categ_vars], as.factor)
df <- df %>% drop_na(any_of(clust_vars))
gower.dist <- daisy(df[clust_vars], metric = c("gower"))
pam_clust = pam(gower.dist, diss = TRUE, k = 11)
df[pam_clust$medoids, clust_vars]
df <- df %>% mutate(cluster = pam_clust$clustering)
tsne_object <- Rtsne(gower.dist, is_distance = TRUE)
tsne_df <- tsne_object$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_clust$clustering))
ggplot(aes(x = X, y = Y), data = tsne_df) +
geom_point(aes(color = cluster))
clusters <- df %>%
group_by(cluster) %>%
summarize(age = mean(Age),
education = mean(Educ),
living = mean(living),
income = mean(Income))
clusters
clusters <- df %>%
group_by(cluster) %>%
summarize(age = mean(Age),
education = mean(Educ),
living = mean(living),
income = mean(Income))
clusters
clusters <- df %>%
group_by(cluster)
summary(clusters)
df %>% group_by(cluster, Gender) %>% summarize(count = n())
gender <- df %>% group_by(cluster, Gender) %>% summarize(count = n())
gender <- df %>% group_by(cluster, Gender) %>% summarize(count = n())
gender
ggplot(data = gender, aes(fill = Gender, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity")
gender <- df %>%
group_by(cluster) %>%
mutate(total = n()) %>%
group_by(Gender) %>%
summarize(count = n())
View(gender)
gender <- df %>%
group_by(cluster) %>%
mutate(total = n()) %>%
ggplot(data = gender, aes(fill = Gender, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity")
gender <- df %>%
group_by(cluster) %>%
mutate(total = n())
gender <- df %>%
group_by(cluster, gender) %>%
mutate(count = n())
gender <- df %>%
group_by(cluster, Gender) %>%
mutate(count = n())
ggplot(data = gender, aes(fill = Gender, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity")
ggplot(data = gender, aes(fill = Gender, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_discrete()
ggplot(data = gender, aes(fill = Gender, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(cluster, n = 11))
ggplot(data = gender, aes(fill = Gender, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(gender$cluster, n = 11))
plot_categorical <- function(var_name, cluster_num){
var_table <- df %>%
group_by(cluster, var_name) %>%
mutate(count = n())
ggplot(data = var_table, aes(fill = var_name, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = cluster_num))
}
plot_categorical(Gender,11)
plot_categorical("Gender",11)
plot_categorical <- function(dataframe, var_name, cluster_num){
var_table <- df %>%
group_by(cluster, var_name) %>%
mutate(count = n())
ggplot(data = var_table, aes(fill = var_name, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = cluster_num))
}
plot_categorical(df, Gender,11)
plot_categorical <- function(dataframe, cluster_num){
dataframe <- dataframe %>% mutate(count = n())
ggplot(data = dataframe, aes(fill = var_name, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(dataframe$cluster, n = cluster_num))
}
df %>% group_by(cluster, gender) %>% plot_categorical(11)
df %>% group_by(cluster, Gender) %>% plot_categorical(11)
plot_categorical <- function(df, var_name, cluster_num){
var_table <- df %>%
group_by(cluster, !!var_name) %>%
mutate(count = n())
ggplot(data = var_table, aes(fill = !!var_name, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = cluster_num))
}
plot_categorical(df, "Gender",11)
plot_categorical <- function(df, var_name, cluster_num){
var_table <- df %>%
group_by(cluster, (!!var_name)) %>%
mutate(count = n())
ggplot(data = var_table, aes(fill = !!var_name, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = cluster_num))
}
plot_categorical(df, "Gender" ,11)
var_table <- df %>%
group_by(cluster, Gender) %>%
mutate(count = n())
ggplot(data = var_table, aes(fill = Gender, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = 11))
var_table <- df %>%
group_by(cluster, !!"Gender") %>%
mutate(count = n())
ggplot(data = var_table, aes(fill = !!"Gender", y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = 11))
var_table <- df %>%
group_by(cluster, !!"Gender") %>%
mutate(count = n())
View(var_table)
plot_categorical(df, !!"Gender" ,11)
plot_categorical <- function(df, var_name, cluster_num){
var_name = enquo(var_name)
var_table <- df %>%
group_by(cluster, (!!var_name)) %>%
mutate(count = n())
ggplot(data = var_table, aes(fill = !!var_name, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = cluster_num))
}
plot_categorical(df, Gender ,11)
plot_categorical(df, rural_urban, 11)
plot_categorical(df, race, 11)
plot_categorical(df, schooling,11)
plot_categorical(df, Schooling, 11)
plot_categorical(df, Occupation, 11)
lm(df$meduse~cluster)
lm(df$meduse~df$cluster)
summary(lm(df$meduse~df$cluster))
df$cluster <- as.factor(df$cluster)
summary(lm(meduse~cluster, data = df))
summary(lm(medtrust~cluster, data = df))
summary(lm(insttrust~cluster, data = df))
summary(lm(instrust~cluster, data = df))
silhouette <- c()
silhouette = c(silhouette, NA)
for(i in 2:15){
pam_clusters = pam(as.matrix(gower.dist),
diss = TRUE,
k = i)
silhouette = c(silhouette ,pam_clusters$silinfo$avg.width)
}
plot(1:15, silhouette,
xlab = "Clusters",
ylab = "Silhouette Width")
lines(1:15, silhouette)
pam_clust = pam(gower.dist, diss = TRUE, k = 4)
tsne_object <- Rtsne(gower.dist, is_distance = TRUE)
tsne_df <- tsne_object$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_clust$clustering))
ggplot(aes(x = X, y = Y), data = tsne_df) +
geom_point(aes(color = cluster))
df[pam_clust$medoids, clust_vars]
df <- df %>% mutate(cluster = pam_clust$clustering)
clusters <- df %>%
group_by(cluster) %>%
summarize(age = mean(Age),
education = mean(Educ),
living = mean(living),
income = mean(Income))
summary(clusters)
plot_categorical <- function(df, var_name, cluster_num){
var_name = enquo(var_name)
var_table <- df %>%
group_by(cluster, (!!var_name)) %>%
mutate(count = n())
ggplot(data = var_table, aes(fill = !!var_name, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = cluster_num))
}
plot_categorical(df, Gender ,4)
plot_categorical(df, rural_urban, 4)
plot_categorical(df, race, 4)
plot_categorical(df, Schooling, 4)
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
mutate(count = n()) %>%
slice(1:2)
View(topOccupation)
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
mutate(count = n())
var_table <- df %>%
group_by(cluster, (!!var_name)) %>%
mutate(count = n())
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
mutate(count = n())
View(var_table)
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
mutate(count = n()) %>%
slice(1:2)
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
mutate(count = n()) %>%
slice(1:2)
ggplot(data = topOccupation, aes(fill = Occupation, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = 4))
ggplot(data = topOccupation, aes(fill = Occupation, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(topOccupation$cluster, n = 4))
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
mutate(count = n()) %>%
group_by(cluster)
View(topOccupation)
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
mutate(count = n()) %>%
group_by(cluster, Occupation) %>%
slice(1:2)
ggplot(data = topOccupation, aes(fill = Occupation, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(topOccupation$cluster, n = 4))
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
summarize(count = n())
View(topOccupation)
ggplot(data = topOccupation, aes(fill = Occupation, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(topOccupation$cluster, n = 4))
plot_categorical <- function(df, var_name, cluster_num){
var_name = enquo(var_name)
var_table <- df %>%
group_by(cluster, (!!var_name)) %>%
summarize(count = n())
ggplot(data = var_table, aes(fill = !!var_name, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(var_table$cluster, n = cluster_num))
}
plot_categorical(df, Gender ,4)
plot_categorical(df, rural_urban, 4)
plot_categorical(df, race, 4)
plot_categorical(df, Schooling, 4)
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
summarize(count = n()) %>%
group_by(cluster) %>%
slice(1:2)
View(topOccupation)
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
group_by(cluster) %>%
slice(1:2)
View(topOccupation)
topOccupation <- df %>%
group_by(cluster, Occupation) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
group_by(cluster) %>%
slice(1:3)
ggplot(data = topOccupation, aes(fill = Occupation, y = count, x = cluster)) +
geom_bar(position = "dodge", stat = "identity") +
scale_x_continuous(breaks = pretty(topOccupation$cluster, n = 4))
df$cluster <- as.factor(df$cluster)
summary(lm(instrust~cluster, data = df))
summary(lm(medtrust~cluster, data = df))
summary(lm(pol_part~cluster, data = df))
View(df)
summary(lm(meduse~cluster, data = df))
summary(lm(voteintent~cluster, data = df))
summary(lm(voteint~cluster, data = df))
workshop <- "Programming Program for Proletariat"
for (letter in workshop) {
print(letter)
}
guests <- c("Sang", "Max", "Jess", "Luhang", "Fan")
for (person in guests) {
print(person)
}
n = 0
while (n < 10){
print(n)
n = n+1
}
n = 0
while (n < 3){
print(n)
n = n+1
}
while (n < 6){
print(guests[n])
n = n+1
}
n <- 1
while (n < 6){
print(n)
n = n+1
}
workshop <- "Programming Program for Proletariat"
guests <- c("Sang", "Max", "Jess", "Luhang", "Fan", "Wil", "Abby")
n <- 1
while (n < 6){
print(guests[n])
n = n+1
}
switch <- TRUE
n <- 1
while (switch){
print(guests[n])
n = n+1
if (guests[n] == "Wil") {
switch <- FALSE
}
}
for (letter in workshop) {
print(letter)
}
for (person in guests) {
print(person)
}
for (letter in workshop) {
print(letter)
}
for (person in guests) {
print(person)
}
for (person in guests) {
if (person == "Wil"){
break
}
print(person)
}
n <- 1
while (n < 6){
print(n)
n = n+1
}
workshop <- "Programming Program for Proletariat"
guests <- c("Sang", "Max", "Jess", "Luhang", "Fan", "Abby", "Wil")
n <- 1
while (n < 6){
print(guests[n])
n = n+1
}
switch <- TRUE
n <- 1
while (switch){
print(guests[n])
n = n+1
if (guests[n] == "Abby") {
switch <- FALSE
}
}
switch <- TRUE
n <- 1
while (switch){
print(guests[n])
n = n+1
if (guests[n] == "Abby") {
switch <- FALSE
}
}
n <- 1
while (n < 6){
print(n)
n = n+1
}
workshop <- "Programming Program for Proletariat"
guests <- c("Sang", "Max", "Jess", "Luhang", "Fan", "Yibing", "Abby", "Wil")
n <- 1
while (n < 7){
print(guests[n])
n = n+1
}
switch <- TRUE
n <- 1
while (switch){
print(guests[n])
n = n+1
if (guests[n] == "Abby") {
switch <- FALSE
}
}
for (letter in workshop) {
print(letter)
}
for (person in guests) {
print(person)
}
for (person in guests) {
if (person == "Abby"){
break
}
print(person)
}
old.packages()
update.packages()
no
packages <- c("striprtf", # To read .rtf files
"stringr", # To parse character strings
"readr", # To parse numbers
"lubridate") # To process date strings
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], repos = 'http://cran.us.r-project.org')
}
invisible(lapply(packages, library, character.only = TRUE))
packages <- c("striprtf", # To read .rtf files
"stringr", # To parse character strings
"readr", # To parse numbers
"lubridate", # To process date strings
"here")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], repos = 'http://cran.us.r-project.org')
}
invisible(lapply(packages, library, character.only = TRUE))
